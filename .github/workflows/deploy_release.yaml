#a git hub action to deploy to repository 'releases' sections
name: ShellScriptUtils - deploy release
run-name: $${{ github.author }} is deploying a release
on:
  push:
    tags:
      - 'v*'

jobs:
  run-tests:
    name: Run tests
    uses: ./.github/workflows/runtests.yaml
    with:
      tests-folder: tests
      main-script: runtests.sh
      
  prepare-release:
    name: Deploy release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: saving files to a tar.gz
        #run tar -czf, excluding .git and .github folders
        run: |
          currentFolderName=${PWD##*/}
          currFolder=$(pwd)
          ls -lha
          cd ..
          ls -lha
          echo "coping files for a new folder"
          echo "reponame: $currentFolderName"
          echo "destination-filename: ShellScriptUtils-${{ github.ref_name }}"
          cp -r "$currentFolderName" ShellScriptUtils-${{ github.ref_name }}
          rm -rf ShellScriptUtils-${{ github.ref_name }}/.git
          rm -rf ShellScriptUtils-${{ github.ref_name }}/.github
          
          echo "Packing the folder ShellScriptUtils-${{ github.ref_name }}  (excluding .githuba and .git folders) ..."
          tar -czf ShellScriptUtils-${{ github.ref_name }}.tar.gz ShellScriptUtils-${{ github.ref_name }}
          mkdir -p $currFolder/ShellScriptUtils-${{ github.ref_name }}
          mv ShellScriptUtils-${{ github.ref_name }}.tar.gz $currFolder/ShellScriptUtils-${{ github.ref_name }}/
          ls -lha


      - name: Step 3 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: ShellScriptUtils-${{ github.ref_name }}
        
  